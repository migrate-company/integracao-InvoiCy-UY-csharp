//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmissionFactura
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Gx", ConfigurationName="EmissionFactura.WS_EmissionFacturaSoapPort")]
    public interface WS_EmissionFacturaSoapPort
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="Gxaction/AWS_EMISSIONFACTURA.Execute", ReplyAction="*")]
        EmissionFactura.ExecuteResponse Execute(EmissionFactura.ExecuteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Gxaction/AWS_EMISSIONFACTURA.Execute", ReplyAction="*")]
        System.Threading.Tasks.Task<EmissionFactura.ExecuteResponse> ExecuteAsync(EmissionFactura.ExecuteRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExecuteRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="WS_EmissionFactura.Execute", Namespace="Gx", Order=0)]
        public EmissionFactura.ExecuteRequestBody Body;
        
        public ExecuteRequest()
        {
        }
        
        public ExecuteRequest(EmissionFactura.ExecuteRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Gx")]
    public partial class ExecuteRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string Xmlrecepcao;
        
        public ExecuteRequestBody()
        {
        }
        
        public ExecuteRequestBody(string Xmlrecepcao)
        {
            this.Xmlrecepcao = Xmlrecepcao;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExecuteResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="WS_EmissionFactura.ExecuteResponse", Namespace="Gx", Order=0)]
        public EmissionFactura.ExecuteResponseBody Body;
        
        public ExecuteResponse()
        {
        }
        
        public ExecuteResponse(EmissionFactura.ExecuteResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="Gx")]
    public partial class ExecuteResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string Xmlretorno;
        
        public ExecuteResponseBody()
        {
        }
        
        public ExecuteResponseBody(string Xmlretorno)
        {
            this.Xmlretorno = Xmlretorno;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface WS_EmissionFacturaSoapPortChannel : EmissionFactura.WS_EmissionFacturaSoapPort, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class WS_EmissionFacturaSoapPortClient : System.ServiceModel.ClientBase<EmissionFactura.WS_EmissionFacturaSoapPort>, EmissionFactura.WS_EmissionFacturaSoapPort
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public WS_EmissionFacturaSoapPortClient() : 
                base(WS_EmissionFacturaSoapPortClient.GetDefaultBinding(), WS_EmissionFacturaSoapPortClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.WS_EmissionFacturaSoapPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WS_EmissionFacturaSoapPortClient(EndpointConfiguration endpointConfiguration) : 
                base(WS_EmissionFacturaSoapPortClient.GetBindingForEndpoint(endpointConfiguration), WS_EmissionFacturaSoapPortClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WS_EmissionFacturaSoapPortClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(WS_EmissionFacturaSoapPortClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WS_EmissionFacturaSoapPortClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(WS_EmissionFacturaSoapPortClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WS_EmissionFacturaSoapPortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public EmissionFactura.ExecuteResponse Execute(EmissionFactura.ExecuteRequest request)
        {
            return base.Channel.Execute(request);
        }
        
        public System.Threading.Tasks.Task<EmissionFactura.ExecuteResponse> ExecuteAsync(EmissionFactura.ExecuteRequest request)
        {
            return base.Channel.ExecuteAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WS_EmissionFacturaSoapPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WS_EmissionFacturaSoapPort))
            {
                return new System.ServiceModel.EndpointAddress("https://appuypruebas.migrate.info/InvoiCy/aws_emissionfactura.aspx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return WS_EmissionFacturaSoapPortClient.GetBindingForEndpoint(EndpointConfiguration.WS_EmissionFacturaSoapPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return WS_EmissionFacturaSoapPortClient.GetEndpointAddress(EndpointConfiguration.WS_EmissionFacturaSoapPort);
        }
        
        public enum EndpointConfiguration
        {
            
            WS_EmissionFacturaSoapPort,
        }
    }
}
